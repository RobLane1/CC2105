<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration 
	http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file 
	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/> 

	<!-- General setup -->
	<!-- Already mentioned in core hot folder service -->
	<bean id="baseDirectorySaphhire" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/powertools" />
	</bean>
	
	<!-- #######Impex import process######## -->
	
	<!-- 1) Scan for files, site dependent -->
	<!-- check {extensionName}-spring-{siteName}.xml files for spring integration configuration of this first step -->
	<file:inbound-channel-adapter id="batchFilesSaphhire" directory="#{baseDirectorySaphhire}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>
	
	<!-- 2) move the file to processing and setup header, partly site dependent -->
	<file:outbound-gateway request-channel="batchFilesSaphhire" reply-channel="batchFilesHeaderInit"
		directory="#{baseDirectorySaphhire}/processing" delete-source-files="true" />
	

	<!-- 3) transform csv to impex file -->
	<!-- Already mentioned in core hot folder service -->
	
	<!-- Transformer converters mappings -->
	<bean id="batchCustomerConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="customer" 
		  p:converter-ref="batchCustomerConverter"/>
		  		  	  	  
	<!-- 4) run impex import -->
	<!-- Already mentioned in core hot folder service -->

	<!-- 5) Cleanup -->
	<!-- Already mentioned in core hot folder service -->

	<!-- impex converters -->
	<bean id="batchCustomerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Insert Customer
				$setName=name[cellDecorator=de.hybris.platform.acceleratorservices.dataimport.batch.decorator.CustomerNameDecorator]
				INSERT Customer;uid[unique=true];$setName;title(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1} {2};{3};</value>
		</property>
	</bean>	
	
</beans>
